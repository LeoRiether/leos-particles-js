{"version":3,"sources":["vector.js","particle.js","helper.js","app.js"],"names":["V","x","y","v","Math","sqrt","a","b","k","r","theta","cos","sin","Particle","pos","vel","radius","opacity","dt","w","h","add","scale","c","fillStyle","globalAlpha","beginPath","arc","PI","fill","closePath","nothing","dist","rand","randv","v0","v1","dx","dy","min","max","random","minx","maxx","miny","maxy","_","fps","conDist","Particles","n","attract","particles","canvas","document","getElementById","width","documentElement","clientWidth","height","clientHeight","getContext","strokeWeight","hue","createParticles","i","push","toCartesian","fillRect","strokeStyle","length","update","draw","d","j","moveTo","lineTo","stroke","oposite","dabs","abs","window","interval","clearInterval","setInterval","loop","bind","addEventListener","e","keyCode"],"mappings":"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","file":"app.ceb42601.map","sourceRoot":"..","sourcesContent":["class V {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  add(v) {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    return this;\r\n  }\r\n\r\n  abs() {\r\n    return Math.sqrt(this.x*this.x + this.y*this.y);\r\n  }\r\n\r\n  get oposite() { return new V(-this.x, -this.y); }\r\n\r\n  static add(a, b) {\r\n    return new V(a.x+b.x, a.y+b.y);\r\n  }\r\n\r\n  static scale(a, k) {\r\n    return new V(a.x*k, a.y*k);\r\n  }\r\n\r\n  static toCartesian(r, theta) {\r\n    return new V(\r\n      r*Math.cos(theta),\r\n      r*Math.sin(theta)\r\n    )\r\n  }\r\n}\r\n\r\nexport default V;","import V from \"./vector.js\"\r\n\r\nclass Particle {\r\n  constructor(pos, vel, radius, opacity) {\r\n    this.pos = pos;\r\n    this.vel = vel;\r\n    this.r = radius;\r\n    this.opacity = opacity;\r\n  }\r\n\r\n  update(dt, w, h) {\r\n    this.pos.add(V.scale(this.vel, dt));\r\n\r\n    // Bounce off the borders\r\n    if (this.pos.x <= 0) { this.vel.x *= -1; this.pos.x = 0; }\r\n    if (this.pos.x >= w) { this.vel.x *= -1; this.pos.x = w; }\r\n    if (this.pos.y <= 0) { this.vel.y *= -1; this.pos.y = 0; }\r\n    if (this.pos.y >= h) { this.vel.y *= -1; this.pos.y = h; }\r\n  }\r\n\r\n  draw(c) {\r\n    c.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;\r\n    c.globalAlpha = 1;\r\n    // c.globalAlpha = this.opacity;\r\n    c.beginPath();\r\n    c.arc(this.pos.x, this.pos.y, this.r, 0, 2.0*Math.PI);\r\n    c.fill();\r\n    c.closePath();\r\n  }\r\n}\r\n\r\nexport default Particle;","import V from \"./vector.js\";\r\n\r\nexport default function nothing(){}\r\n\r\nexport function dist(v0, v1) {\r\n  let dx = v0.x - v1.x;\r\n  let dy = v0.y - v1.y;\r\n  return Math.sqrt(dx*dx + dy*dy);\r\n}\r\n\r\nexport function rand(min, max) {\r\n  return Math.random() * (max-min) + min;\r\n}\r\n\r\nexport function randv(minx, maxx, miny, maxy) {\r\n  return new V(\r\n    rand(minx, maxx),\r\n    rand(miny, maxy)\r\n  );\r\n}\r\n","import V from \"./vector.js\"\r\nimport Particle from \"./particle.js\"\r\nimport __, * as _ from \"./helper.js\"\r\nlet fps = 40;\r\nlet dt = 1.0/fps;\r\n\r\nlet conDist = 180;// Minimum distance for the connection between particles to be shown\r\n\r\nclass Particles {\r\n  constructor(n, attract) {\r\n    this.particles = [];\r\n    this.canvas = document.getElementById('canvas');\r\n    this.canvas.width = this.width = document.documentElement.clientWidth;\r\n    this.canvas.height = this.height = document.documentElement.clientHeight;\r\n    this.c = this.canvas.getContext('2d');\r\n    this.c.strokeWeight = 2;\r\n    this.hue = 0;\r\n    this.attract = attract;\r\n    this.createParticles(n);\r\n  }\r\n\r\n  createParticles(n) {\r\n    for (let i = 0; i < n; i++)\r\n      this.particles.push(new Particle(\r\n        _.randv(0, this.width, 0, this.height), // Random Position\r\n        V.toCartesian(_.rand(50, 80), _.rand(0, 2*Math.PI)), // Speed with random angle and intensity\r\n        _.rand(1, 3), // Radius\r\n        _.rand(.25, 1) // Opacity\r\n      ));\r\n  }\r\n\r\n  loop() {\r\n    // this.c.fillStyle = '#124599';\r\n    this.c.fillStyle = `hsl(${this.hue}, 70%, 40%)`;\r\n    this.c.fillRect(0, 0, this.width, this.height);\r\n\r\n    this.c.strokeStyle = 'white';\r\n    for (let i = 0; i < this.particles.length; i++) {\r\n      this.particles[i].update(dt, this.width, this.height);\r\n      this.particles[i].draw(this.c);\r\n\r\n      // Draws the connections betweens particles\r\n      // O(n²)... ikr...\r\n      // At least j = i+1 was optimized, right?\r\n      let d;\r\n      for (let j = i+1; j < this.particles.length; j++) {\r\n        d = _.dist(this.particles[i].pos, this.particles[j].pos);\r\n        if (d < conDist) {\r\n          this.c.globalAlpha = (conDist - d) / conDist;\r\n          this.c.beginPath();\r\n          this.c.moveTo(this.particles[i].pos.x, this.particles[i].pos.y);\r\n          this.c.lineTo(this.particles[j].pos.x, this.particles[j].pos.y);\r\n          this.c.stroke();\r\n          this.c.closePath();\r\n        }\r\n      }\r\n\r\n      if (this.attract) {\r\n        for (let k = 0; k < this.particles.length; k++) {\r\n          if (k == i) continue;\r\n          let d = V.add(this.particles[i].pos.oposite, this.particles[k].pos);\r\n          let dabs = 1.0/d.abs();\r\n          this.particles[i].vel.add(V.scale(d, 50*dabs*dabs));\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    this.hue = (this.hue + .2) % 360;\r\n  }\r\n\r\n}\r\n\r\nif (window.particles && window.particles.interval) clearInterval(window.particles.interval);\r\nwindow.particles = new Particles(60, false);\r\nwindow.particles.interval = setInterval(window.particles.loop.bind(window.particles), dt*1000);\r\n\r\ndocument.addEventListener('keyup', e => {\r\n  if (e.keyCode == 13) // enter\r\n    window.particles.attract = !window.particles.attract; \r\n})"]}